package databaseworkbench.codes;

import databaseworkbench.Configs;
import databaseworkbench.MainWindow;
import databaseworkbench.beans.TableBean;
import java.awt.Cursor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.nio.charset.Charset;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.event.InternalFrameEvent;
import javax.swing.event.InternalFrameListener;

/**
 *
 * @author Petri Koskelainen <pete.software.industries@gmail.com>
 */
public class ManyTablesOneFileFrame extends javax.swing.JInternalFrame implements ActionListener, InternalFrameListener {

    private static ManyTablesOneFileFrame INSTANCE;
    
    private MTOFReadFile rfJOB;
    private ManyTablesOneFileFrameThread theJOB;
    private DefaultListModel<TableBean> tableModel = new DefaultListModel();
    /**
     * Creates new form CodeManager
     */
    private ManyTablesOneFileFrame() {
        initComponents();
        this.addInternalFrameListener( this );
        this.listTableBeans.setModel( tableModel );
        
    }
    
    public static synchronized ManyTablesOneFileFrame  getInstance() {
        if (INSTANCE == null) {
            INSTANCE = new ManyTablesOneFileFrame();
        }
        return INSTANCE;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listTableBeans = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jtfOutputPath = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtfOutputFilename = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtfTemplateFile = new javax.swing.JTextField();
        jtbLoadTemplate = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        textPaneTemplateText = new javax.swing.JTextPane();
        jLabel5 = new javax.swing.JLabel();
        jtbDoTheJob = new javax.swing.JButton();

        setClosable(true);
        setTitle("Many Tables, One File");

        jScrollPane1.setViewportView(listTableBeans);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Select tables");

        jLabel2.setText("Output path:");

        jLabel3.setText("Output filename:");

        jLabel4.setText("Template file:");

        jtbLoadTemplate.setText("...");
        jtbLoadTemplate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtbLoadTemplateActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(textPaneTemplateText);

        jLabel5.setText("Template");

        jtbDoTheJob.setText("Do The JOB");
        jtbDoTheJob.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtbDoTheJobActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jtfOutputPath)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3)
                        .addComponent(jtfOutputFilename)
                        .addComponent(jLabel4)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jtfTemplateFile, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jtbLoadTemplate, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)))
                    .addComponent(jtbDoTheJob))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jtfOutputPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfTemplateFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtbLoadTemplate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfOutputFilename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtbDoTheJob)))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtbLoadTemplateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtbLoadTemplateActionPerformed
        JFileChooser JFC = new JFileChooser();
        int returnV = JFC.showOpenDialog( MainWindow.getInstance() );
        if (returnV ==JFileChooser.APPROVE_OPTION) {
            File selectedFile = JFC.getSelectedFile();
            rfJOB = new MTOFReadFile(this,selectedFile);
            this.jtfTemplateFile.setText(selectedFile.getAbsolutePath());
            if (this.jtfOutputFilename.getText().equals("")) {
                this.jtfOutputFilename.setText( selectedFile.getName() );
            }
            rfJOB.start();
            this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        }
    }//GEN-LAST:event_jtbLoadTemplateActionPerformed

    private void jtbDoTheJobActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtbDoTheJobActionPerformed
        theJOB = new ManyTablesOneFileFrameThread();
        theJOB.setFrame( this );
        theJOB.start();
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
    }//GEN-LAST:event_jtbDoTheJobActionPerformed

    public void updateTableList() {
        this.tableModel.clear();        
        this.tableModel.addAll( MainWindow.getInstance().getTableBeans() );
    }
    
    @Override
    public void actionPerformed(ActionEvent e) { }

    @Override
    public void internalFrameOpened(InternalFrameEvent e) {
        this.jtfOutputPath.setText( System.getProperty("user.home") );
        updateTableList();
    }

    @Override
    public void internalFrameClosing(InternalFrameEvent e) { }

    @Override
    public void internalFrameClosed(InternalFrameEvent e) { }

    @Override
    public void internalFrameIconified(InternalFrameEvent e) { }

    @Override
    public void internalFrameDeiconified(InternalFrameEvent e) { }

    @Override
    public void internalFrameActivated(InternalFrameEvent e) { }

    @Override
    public void internalFrameDeactivated(InternalFrameEvent e) { }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jtbDoTheJob;
    private javax.swing.JButton jtbLoadTemplate;
    private javax.swing.JTextField jtfOutputFilename;
    private javax.swing.JTextField jtfOutputPath;
    private javax.swing.JTextField jtfTemplateFile;
    private javax.swing.JList<TableBean> listTableBeans;
    private javax.swing.JTextPane textPaneTemplateText;
    // End of variables declaration//GEN-END:variables

    void fileHasBeenRead() {
        this.setCursor(Cursor.getDefaultCursor());
        this.textPaneTemplateText.setText( rfJOB.getText().toString() );
    }

    void jobHasBeenDone() {
        this.setCursor(Cursor.getDefaultCursor());        
    }
    String getTheTemplate() {
        return this.textPaneTemplateText.getText();
    }

    List<TableBean> getSelectedTables() {
        return this.listTableBeans.getSelectedValuesList();
    }

    String getFilename() {
        return this.jtfOutputFilename.getText();
    }

    String getOutputPath() {
        return this.jtfOutputPath.getText();
    }
}

class MTOFReadFile extends Thread {
    
    File readThis;
    StringBuffer buff = new StringBuffer();
    ManyTablesOneFileFrame frame;
    
    MTOFReadFile(ManyTablesOneFileFrame frame, File file) {
        this.readThis = file;
        this.frame = frame;
    }
    
    @Override
    public void run() {
        try {
            FileReader reader = new FileReader( this.readThis, Charset.forName(Configs.getInstance().get("charset")));
            int i;
            while ((i = reader.read()) != -1) {
                buff.append((char) i);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MTOFReadFile.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MTOFReadFile.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        frame.fileHasBeenRead();
    }
    
    StringBuffer getText() {
        return buff;
    }
    
}
